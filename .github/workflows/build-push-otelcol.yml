name: build OpenTelemetry collector container image and push it

on:
  push:
    branches: ["main"]
  repository_dispatch:
    types: [trigger-ecspresso]

jobs:
  judge-exec:
    outputs:
      needs-build: ${{ steps.judge-needs-build.outputs.any_changed }}
      needs-put-otelcol-config: ${{ steps.judge-needs-put-otelcol-config.outputs.any_changed }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: judge-needs-build
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0  # v46
        with:
          files: |
            otelcol-config/**
      - id: judge-needs-put-otelcol-config
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0  # v46
        with:
          files: |
            otelcol-config/stg/otelcol-config.yaml
            otelcol-config/prod/otelcol-config.yaml

  build:
    needs: judge-exec
    if: needs.judge-exec.outputs.needs-build == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/dreamkast-otelcol
          tags: |
            type=sha,prefix=,format=long
            type=ref,event=tag

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: otelcol-config/
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  put-otelcol-config:
    needs: judge-exec
    if: needs.judge-exec.outputs.needs-put-otelcol-config == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Upload stg/otelcol-config.yaml to S3
        run: aws --region ap-northeast-1 s3 cp otelcol-config/stg/ s3://dreamkast-otelcol-config/stg/ --recursive

      - name: Upload prod/otelcol-config.yaml to S3
        run: aws --region ap-northeast-1 s3 cp otelcol-config/prod/ s3://dreamkast-otelcol-config/prod/ --recursive
